import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load grayscale image
img = cv2.imread("test_image.png", cv2.IMREAD_GRAYSCALE)
rows, cols = img.shape

# Step 1: Compute histogram manually
hist = np.zeros(256, dtype=int)
for i in range(rows):
    for j in range(cols):
        hist[img[i, j]] += 1

# Step 2: Compute Probability Distribution Function (PDF)
pdf = hist / (rows * cols)

# Step 3: Compute Cumulative Distribution Function (CDF)
cdf = np.zeros(256, dtype=float)
cdf[0] = pdf[0]
for k in range(1, 256):
    cdf[k] = cdf[k-1] + pdf[k]

# Step 4: Normalize CDF to [0, 255]
cdf_scaled = np.round(cdf * 255).astype(np.uint8)

# Step 5: Map old pixel values to new ones
equalized = np.zeros_like(img)
for i in range(rows):
    for j in range(cols):
        equalized[i, j] = cdf_scaled[img[i, j]]

# ================== SHOW RESULTS ==================
plt.figure(figsize=(10,5))

plt.subplot(2,2,1)
plt.title("Original Image")
plt.imshow(img, cmap="gray")

plt.subplot(2,2,2)
plt.title("Equalized Image")
plt.imshow(equalized, cmap="gray")

plt.subplot(2,2,3)
plt.title("Original Histogram")
plt.hist(img.ravel(), 256, [0,256])

plt.subplot(2,2,4)
plt.title("Equalized Histogram")
plt.hist(equalized.ravel(), 256, [0,256])

plt.show()
